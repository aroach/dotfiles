" General

set nocompatible
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set laststatus=2                "Always display the status line
set hidden                      "Hide buffer instead of closing it
" set pastetoggle=<F2>            "Paste without being smart
set relativenumber 		" show relative line numbers

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬  

" Key mappings

" Load plugins

filetype off

set rtp+=$HOME/.vim/bundle/Vundle.vim
"call vundle#begin("$HOME/.vim/bundle")
call vundle#begin()

" let Vundle manage Vundle (required)

Bundle "VundleVim/Vundlevim"

" Generic

Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
Bundle "itchyny/lightline.vim"
Plugin 'terryma/vim-multiple-cursors'
" Bundle 'rking/ag.vim'

" Git

Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" Syntax hightlighting & colors

Plugin 'scrooloose/syntastic'
" Plugin 'altercation/vim-colors-solarized'
Plugin 'flazz/vim-colorschemes'


" Completion & snippets

" Plugin 'Valloric/YouCompleteMe'
" Plugin 'SirVer/ultisnips'
" Plugin 'honza/vim-snippets'

" JavaScript

Bundle "pangloss/vim-javascript"
Plugin 'marijnh/tern_for_vim'

" Other

Plugin 'tpope/vim-markdown'
Plugin 'mattn/emmet-vim'
Plugin 'reedes/vim-pencil'
Plugin 'Yggdroot/indentLine'

call vundle#end()

"Filetype plugin indent on is required by vundle
filetype plugin indent on


" Pencil config
filetype plugin on       " may already be in your .vimrc

augroup pencil
  autocmd!
  autocmd FileType markdown,mkd,md call pencil#init()
  autocmd FileType text         call pencil#init()
augroup END

" Swap file and backups


" Persistent undo

if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" Indentation

" Enable loading the plugin/indent files for specific file types

filetype plugin indent on

" Wrapping

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" Folding

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" Search

set hlsearch
set incsearch
set ignorecase
set showmatch
set smartcase

" Colors

set cursorline
syntax enable
colorscheme molokai
highlight clear SignColumn

" Scrolling

set scrolloff=4
set sidescrolloff=15
set sidescroll=1

" Only do this part when compiled with support for autocommands
if has("autocmd")
  " Enable file type detection
  filetype on

  " Syntax of these languages is fussy over tabs Vs spaces
  autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
  autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

  " Customisations based on house-style (arbitrary)
  autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType css setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType javascript setlocal ts=2 sts=2 sw=2 expandtab

  " Treat .rss files as XML
  autocmd BufNewFile,BufRead *.rss setfiletype xml
endif

" NERDTree

nmap <leader>n :NERDTreeToggle<cr>
let NERDTreeShowHidden=1

" indentLine
let g:indentLine_enabled = 1
